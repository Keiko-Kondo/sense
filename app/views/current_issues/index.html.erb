<p><%= notice %></p>
<h4>いまある社会課題</h4>


<div class="container">
  <div class="row">
<div class="col-xs-6">

<p>地図で見る</p>

<!-- <div id="sample"></div> -->

<div id="sample">
  <map name="gmimap0" id="gmimap0">
    <area>
  </map>

</div>

<style media="screen">

#sample {
 width: 300px;
   height: 300px;
}
</style>



<script>
var map;
var marker = [];
var infoWindow = [];
var markerData = Array.from(gon.current_issues);

function initMap() {
 // 地図の作成
    var mapLatLng = new google.maps.LatLng({lat: markerData[0]['latitude'], lng: markerData[0]['longitude']}); // 緯度経度のデータ作成
   map = new google.maps.Map(document.getElementById('sample'), { // #sampleに地図を埋め込む
     // center: mapLatLng, // 地図の中心を指定
      center: {lat: 35.680976, lng:139.763784},
      zoom: 4 // 地図のズームを指定
   });

 // マーカー毎の処理
 for (var i = 0; i < markerData.length; i++) {
        markerLatLng = new google.maps.LatLng({lat: markerData[i]['latitude'], lng: markerData[i]['longitude']}); // 緯度経度のデータ作成
        marker[i] = new google.maps.Marker({ // マーカーの追加
         position: markerLatLng, // マーカーを立てる位置を指定
            map: map // マーカーを立てる地図を指定
       });

     infoWindow[i] = new google.maps.InfoWindow({ // 吹き出しの追加
         content: '<div class="sample">' + markerData[i]['address'] + '<br>' + markerData[i]['title']+ '</div>' // 吹き出しに表示する内容
       });

     markerEvent(i); // マーカーにクリックイベントを追加
 }

   marker[0].setOptions({// TAM 東京のマーカーのオプション設定
        icon: {
         url: markerData[0]['icon']// マーカーの画像を変更
       }
   });
}

// マーカーにクリックイベントを追加
function markerEvent(i) {
    marker[i].addListener('click', function() { // マーカーをクリックしたとき
      infoWindow[i].open(map, marker[i]); // 吹き出しの表示
  });
}


</script>


<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY'] %>&callback=initMap" async defer></script>

</div>

<div class="col-xs-6">
<p>一覧</p>
<table>
  <tr>
    <th>タイトル</th>
    <th>課題</th>
  </tr>
<% @current_issues.each do |issue| %>
  <tr>
    <td><%= issue.title %></td>
    <td><%= issue.issue %></td>
    <td><button type="button" class="btn btn-secondary"><%= link_to '詳細', current_issue_path(issue.id) %></button></td>
  <% if issue.user == current_user %>
    <td><button type="button" class="btn btn-secondary"><%= link_to "編集", edit_current_issue_path(issue.id) %></button></td>
    <td><button type="button" class="btn btn-secondary"><%= link_to '削除', current_issue_path(issue.id), method: :delete, data: { confirm: '本当に削除していいですか？' }  %></button></td>
  <% end %>
  </tr>
<% end %>
</table>
</div>

</div>
</div>

<br>
<div class="toukou"><button type="button" class="btn-outline-primary"><%= link_to '新しく課題を投稿する', new_current_issue_path %></button></div>
